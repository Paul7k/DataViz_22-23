//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""MoveLook"",
            ""id"": ""873c319c-526b-4b69-bfdb-f3fe8171cbd1"",
            ""actions"": [
                {
                    ""name"": ""MoveController"",
                    ""type"": ""Value"",
                    ""id"": ""ecacccc5-5c37-4e66-b2a8-4b5e7142073e"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""d2e45695-a235-49c0-b3aa-b9dad2b70b74"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Debug"",
                    ""type"": ""Button"",
                    ""id"": ""cb77c26c-eeca-427b-b8b2-2b7f21327eb5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""e036f6fb-80c3-473f-9d50-06e8e4d0e702"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveUpDown"",
                    ""type"": ""Button"",
                    ""id"": ""2d853dbd-7f67-40eb-a734-eacbc9fe19df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveRightLeft"",
                    ""type"": ""Button"",
                    ""id"": ""bea76574-6d5a-45b2-b8a4-80dd444caa9d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveForwardBack"",
                    ""type"": ""Button"",
                    ""id"": ""53561b91-a198-4c01-ae8f-23243f3f0c81"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""Value"",
                    ""id"": ""8afe4e40-9b95-47d4-a296-b602ed4634b9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseClick"",
                    ""type"": ""Button"",
                    ""id"": ""2b3e9f25-df14-45e6-9631-f54e69b255b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""993580dc-7c54-4a9c-aff2-22b1c2e664b1"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Debug"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""3D Vector"",
                    ""id"": ""e99aeebd-6899-46f9-8369-e41cdf7b62b8"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveController"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bca28f04-166c-42d8-a1ec-e58b04f38171"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveController"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3eac01f3-81e6-4b2e-8d0a-cb77627a4976"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveController"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0b0cafb0-db49-4909-a3fc-6a86dc252959"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveController"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ea20273d-ec21-4777-926d-69b58a0eb2b7"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveController"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""forward"",
                    ""id"": ""2f2edd9b-94b3-4323-947b-871ac2933104"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveController"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""backward"",
                    ""id"": ""2bfd5252-9a99-4669-b839-6808c7c0778b"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveController"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""05a30377-0b18-4111-add2-06d087228677"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""69284497-89d2-4d9f-b896-8e29fbacb011"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9d00a5dd-0ad0-417e-9348-649536fa18d7"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""aa24e7ea-90bf-4180-b839-236630e0a982"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""85841c34-afe5-4ff3-962e-645469d076f5"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8f2e4aef-d5ec-417c-904a-a80a453a06b1"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""600cfc2b-eb8c-47c9-9ec9-5cef6463a25d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveUpDown"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""7ba9f4d5-1a89-496f-ba4a-8fbdcae26e69"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""735aa811-8a98-4791-8ecd-c399ee5af128"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""743fa4a2-c067-48bb-b6cf-73f1a5ae2fec"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveRightLeft"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""8dc43f72-9c0f-4bae-a792-373628604fa7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveRightLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""62f30c72-ff44-4ccc-b4da-0316406f1fda"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveRightLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""a0058eff-8ed6-4d8e-a10c-ad806eafc717"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveForwardBack"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""87c25b45-cf6d-4d0b-87bf-bd9f5cbce1aa"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveForwardBack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""f333b8d8-339f-4deb-b12c-3a4fa5fdbe65"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveForwardBack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a2602f44-5ea0-49a6-9b20-91220977e75b"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6fe72262-1993-4e55-af36-fa41e4c2bf6e"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CamSwapping"",
            ""id"": ""73000d69-83fa-488b-8688-5aaf291685fa"",
            ""actions"": [
                {
                    ""name"": ""Persp"",
                    ""type"": ""Button"",
                    ""id"": ""04e80fff-e4ab-4dbd-8300-7944dcf03340"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Front"",
                    ""type"": ""Button"",
                    ""id"": ""1ecf6c78-c4aa-45fd-9e2a-f58227c37fb6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Side"",
                    ""type"": ""Button"",
                    ""id"": ""4d642414-86d7-4c72-8fc9-e36f9c68a368"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Top"",
                    ""type"": ""Button"",
                    ""id"": ""35265157-5639-484b-bdd7-397fe18468d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f2c8346c-b61b-46c3-a06a-5bed2de619dc"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Persp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2eae8265-15fd-4ee6-b897-9d3603dc9e03"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Persp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""276d4536-090f-40ff-a649-2045d2e2db3b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Front"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f98ccf0b-fa05-4d12-ae26-616ba60a85b1"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Front"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1fd722ed-3a82-43b9-b28f-59a9cc2d9ee3"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Side"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""158620e6-2fab-4e37-8467-5e1413102c9c"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Side"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3669d1aa-fa7b-4948-905b-e905a6120dd2"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Top"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0874b961-2eb8-4c58-a21b-cdd4a3e3e065"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Top"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MoveLook
        m_MoveLook = asset.FindActionMap("MoveLook", throwIfNotFound: true);
        m_MoveLook_MoveController = m_MoveLook.FindAction("MoveController", throwIfNotFound: true);
        m_MoveLook_Look = m_MoveLook.FindAction("Look", throwIfNotFound: true);
        m_MoveLook_Debug = m_MoveLook.FindAction("Debug", throwIfNotFound: true);
        m_MoveLook_Escape = m_MoveLook.FindAction("Escape", throwIfNotFound: true);
        m_MoveLook_MoveUpDown = m_MoveLook.FindAction("MoveUpDown", throwIfNotFound: true);
        m_MoveLook_MoveRightLeft = m_MoveLook.FindAction("MoveRightLeft", throwIfNotFound: true);
        m_MoveLook_MoveForwardBack = m_MoveLook.FindAction("MoveForwardBack", throwIfNotFound: true);
        m_MoveLook_Mouse = m_MoveLook.FindAction("Mouse", throwIfNotFound: true);
        m_MoveLook_MouseClick = m_MoveLook.FindAction("MouseClick", throwIfNotFound: true);
        // CamSwapping
        m_CamSwapping = asset.FindActionMap("CamSwapping", throwIfNotFound: true);
        m_CamSwapping_Persp = m_CamSwapping.FindAction("Persp", throwIfNotFound: true);
        m_CamSwapping_Front = m_CamSwapping.FindAction("Front", throwIfNotFound: true);
        m_CamSwapping_Side = m_CamSwapping.FindAction("Side", throwIfNotFound: true);
        m_CamSwapping_Top = m_CamSwapping.FindAction("Top", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MoveLook
    private readonly InputActionMap m_MoveLook;
    private IMoveLookActions m_MoveLookActionsCallbackInterface;
    private readonly InputAction m_MoveLook_MoveController;
    private readonly InputAction m_MoveLook_Look;
    private readonly InputAction m_MoveLook_Debug;
    private readonly InputAction m_MoveLook_Escape;
    private readonly InputAction m_MoveLook_MoveUpDown;
    private readonly InputAction m_MoveLook_MoveRightLeft;
    private readonly InputAction m_MoveLook_MoveForwardBack;
    private readonly InputAction m_MoveLook_Mouse;
    private readonly InputAction m_MoveLook_MouseClick;
    public struct MoveLookActions
    {
        private @Controls m_Wrapper;
        public MoveLookActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveController => m_Wrapper.m_MoveLook_MoveController;
        public InputAction @Look => m_Wrapper.m_MoveLook_Look;
        public InputAction @Debug => m_Wrapper.m_MoveLook_Debug;
        public InputAction @Escape => m_Wrapper.m_MoveLook_Escape;
        public InputAction @MoveUpDown => m_Wrapper.m_MoveLook_MoveUpDown;
        public InputAction @MoveRightLeft => m_Wrapper.m_MoveLook_MoveRightLeft;
        public InputAction @MoveForwardBack => m_Wrapper.m_MoveLook_MoveForwardBack;
        public InputAction @Mouse => m_Wrapper.m_MoveLook_Mouse;
        public InputAction @MouseClick => m_Wrapper.m_MoveLook_MouseClick;
        public InputActionMap Get() { return m_Wrapper.m_MoveLook; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MoveLookActions set) { return set.Get(); }
        public void SetCallbacks(IMoveLookActions instance)
        {
            if (m_Wrapper.m_MoveLookActionsCallbackInterface != null)
            {
                @MoveController.started -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMoveController;
                @MoveController.performed -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMoveController;
                @MoveController.canceled -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMoveController;
                @Look.started -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnLook;
                @Debug.started -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnDebug;
                @Debug.performed -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnDebug;
                @Debug.canceled -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnDebug;
                @Escape.started -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnEscape;
                @Escape.performed -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnEscape;
                @Escape.canceled -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnEscape;
                @MoveUpDown.started -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMoveUpDown;
                @MoveUpDown.performed -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMoveUpDown;
                @MoveUpDown.canceled -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMoveUpDown;
                @MoveRightLeft.started -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMoveRightLeft;
                @MoveRightLeft.performed -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMoveRightLeft;
                @MoveRightLeft.canceled -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMoveRightLeft;
                @MoveForwardBack.started -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMoveForwardBack;
                @MoveForwardBack.performed -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMoveForwardBack;
                @MoveForwardBack.canceled -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMoveForwardBack;
                @Mouse.started -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMouse;
                @Mouse.performed -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMouse;
                @Mouse.canceled -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMouse;
                @MouseClick.started -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMouseClick;
                @MouseClick.performed -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMouseClick;
                @MouseClick.canceled -= m_Wrapper.m_MoveLookActionsCallbackInterface.OnMouseClick;
            }
            m_Wrapper.m_MoveLookActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveController.started += instance.OnMoveController;
                @MoveController.performed += instance.OnMoveController;
                @MoveController.canceled += instance.OnMoveController;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Debug.started += instance.OnDebug;
                @Debug.performed += instance.OnDebug;
                @Debug.canceled += instance.OnDebug;
                @Escape.started += instance.OnEscape;
                @Escape.performed += instance.OnEscape;
                @Escape.canceled += instance.OnEscape;
                @MoveUpDown.started += instance.OnMoveUpDown;
                @MoveUpDown.performed += instance.OnMoveUpDown;
                @MoveUpDown.canceled += instance.OnMoveUpDown;
                @MoveRightLeft.started += instance.OnMoveRightLeft;
                @MoveRightLeft.performed += instance.OnMoveRightLeft;
                @MoveRightLeft.canceled += instance.OnMoveRightLeft;
                @MoveForwardBack.started += instance.OnMoveForwardBack;
                @MoveForwardBack.performed += instance.OnMoveForwardBack;
                @MoveForwardBack.canceled += instance.OnMoveForwardBack;
                @Mouse.started += instance.OnMouse;
                @Mouse.performed += instance.OnMouse;
                @Mouse.canceled += instance.OnMouse;
                @MouseClick.started += instance.OnMouseClick;
                @MouseClick.performed += instance.OnMouseClick;
                @MouseClick.canceled += instance.OnMouseClick;
            }
        }
    }
    public MoveLookActions @MoveLook => new MoveLookActions(this);

    // CamSwapping
    private readonly InputActionMap m_CamSwapping;
    private ICamSwappingActions m_CamSwappingActionsCallbackInterface;
    private readonly InputAction m_CamSwapping_Persp;
    private readonly InputAction m_CamSwapping_Front;
    private readonly InputAction m_CamSwapping_Side;
    private readonly InputAction m_CamSwapping_Top;
    public struct CamSwappingActions
    {
        private @Controls m_Wrapper;
        public CamSwappingActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Persp => m_Wrapper.m_CamSwapping_Persp;
        public InputAction @Front => m_Wrapper.m_CamSwapping_Front;
        public InputAction @Side => m_Wrapper.m_CamSwapping_Side;
        public InputAction @Top => m_Wrapper.m_CamSwapping_Top;
        public InputActionMap Get() { return m_Wrapper.m_CamSwapping; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CamSwappingActions set) { return set.Get(); }
        public void SetCallbacks(ICamSwappingActions instance)
        {
            if (m_Wrapper.m_CamSwappingActionsCallbackInterface != null)
            {
                @Persp.started -= m_Wrapper.m_CamSwappingActionsCallbackInterface.OnPersp;
                @Persp.performed -= m_Wrapper.m_CamSwappingActionsCallbackInterface.OnPersp;
                @Persp.canceled -= m_Wrapper.m_CamSwappingActionsCallbackInterface.OnPersp;
                @Front.started -= m_Wrapper.m_CamSwappingActionsCallbackInterface.OnFront;
                @Front.performed -= m_Wrapper.m_CamSwappingActionsCallbackInterface.OnFront;
                @Front.canceled -= m_Wrapper.m_CamSwappingActionsCallbackInterface.OnFront;
                @Side.started -= m_Wrapper.m_CamSwappingActionsCallbackInterface.OnSide;
                @Side.performed -= m_Wrapper.m_CamSwappingActionsCallbackInterface.OnSide;
                @Side.canceled -= m_Wrapper.m_CamSwappingActionsCallbackInterface.OnSide;
                @Top.started -= m_Wrapper.m_CamSwappingActionsCallbackInterface.OnTop;
                @Top.performed -= m_Wrapper.m_CamSwappingActionsCallbackInterface.OnTop;
                @Top.canceled -= m_Wrapper.m_CamSwappingActionsCallbackInterface.OnTop;
            }
            m_Wrapper.m_CamSwappingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Persp.started += instance.OnPersp;
                @Persp.performed += instance.OnPersp;
                @Persp.canceled += instance.OnPersp;
                @Front.started += instance.OnFront;
                @Front.performed += instance.OnFront;
                @Front.canceled += instance.OnFront;
                @Side.started += instance.OnSide;
                @Side.performed += instance.OnSide;
                @Side.canceled += instance.OnSide;
                @Top.started += instance.OnTop;
                @Top.performed += instance.OnTop;
                @Top.canceled += instance.OnTop;
            }
        }
    }
    public CamSwappingActions @CamSwapping => new CamSwappingActions(this);
    public interface IMoveLookActions
    {
        void OnMoveController(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnDebug(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
        void OnMoveUpDown(InputAction.CallbackContext context);
        void OnMoveRightLeft(InputAction.CallbackContext context);
        void OnMoveForwardBack(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
        void OnMouseClick(InputAction.CallbackContext context);
    }
    public interface ICamSwappingActions
    {
        void OnPersp(InputAction.CallbackContext context);
        void OnFront(InputAction.CallbackContext context);
        void OnSide(InputAction.CallbackContext context);
        void OnTop(InputAction.CallbackContext context);
    }
}
